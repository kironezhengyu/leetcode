
flood fill:
Flood-fill (node, target-color, replacement-color):
 1. Set Q to the empty queue.
 2. Add node to the end of Q.
 4. While Q is not empty: 
 5.     Set n equal to the last element of Q.
 6.     Remove last element from Q.
 7.     If the color of n is equal to target-color:
 8.         Set the color of n to replacement-color.
 9.        Add west node to end of Q.
 10.        Add east node to end of Q.
 11.        Add north node to end of Q.
 12.        Add south node to end of Q.
 13. Return.


 huge log, find duplicate:
 external merge sort


file system
auto recovery，load balancing
best availability and scalability. 

nth biggest number in a BST
浮点数的平方根
I was given two linked lists of 
integers. I was asked to return a linked list which contains the non-common 

Find all permutations of a string

 一个巨大的File (billions of rows)，每行包含两个field：ID, description。
设计算法，找出所有对应duplicated description的ID。
两个sorted的数组merge
 用pre-order in-order sequence重构binary tree.
 设计一DVD出租系统，database table, 类和接口等
the kth smallest in two sorted array

In Summary there are significant differences between Hashtable and HashMap in Java e.g. thread-safety and speed and based upon that only use Hashtable if you absolutely need thread-safety, if you are running Java 5 consider using ConcurrentHashMap in Java.


onsite
1. power（ int a, int b）

2. find ways to make coin change

3. print a binary tree in Zig Zag level order

4. how to decide which data structure can be used for special situations

5.  level search tree, need more than one methods

6. design a battleship game

7. given a wrong prototype,  redesign it

8. Sliding window maximum 

9. hiring manager ask details about my projects


（4个印度人+2白人，不管是sde1还是sde2，都在抱怨工作好累还不知道干的什么，
   只有HM以自己做的东西为荣）
整个面试组员给的都是positive的反馈，只有午饭时HM那有几个问题卡住了，之后HR打
电话告知HM决定让我悲剧了。。。

设计一DVD出租系统，database table, 类和接口等
用pre-order in-order sequence重构binary tree.

Binary Tree的Serialization和Deserialization,

file system


哪个路径上的节点最多，路径不是从root到leaf，而是可以从任何地方
开始，可以从child到parent，返回这样最长的路径上的节点数
 编程题是给一个棵树的节点增加一个next指针，指向同一层在他右边的那个节点，最右
边的节点的指向null

二叉树中序遍历的iterator

OODESIGN是考DESIGN一个图书馆

另一个是实现Java的
Iterator Object的一个findNext函数，要求针对embedded list，比如（（a,b)(c)(d,
e))这样的结构，能找到next item
oo题,设计出一个卡牌游戏,

2.tell me one of the most chanllege technical problems

设计自动售货机
前n个prime number
在0和1组成的区域中找1连成的最大个数

sliding windows
OOD for a deck of 52 cards, need to implement shuffling and getting next 
card; OOD for a casino, it has multiple tables and each table has a deck of 
cards

用stack实现queue, 白板coding
 一个大小为n的方形矩阵, 按顺时针的方向打印, 白板coding
比如:
1 2 3
4 5 6
7 8 9
打印顺序: 1 2 3 6 9 8 7 4 5

给定一棵树, 每个节点有任意个子节点, 怎样得到深度, 给出递归和非递归两种解
法, 白板coding

3sum, sort linkedlist, reverse integer

Length of a circular linked list 
longest repeated substring in a given string

Give an example of a project where you failed.

Design a program that would select which elevator in a building would be the most efficient, based on where the elevator is located and headed and where the user is located and headed.
ongest palindrome in a string


recommand system :
User-based recommendations:
If User A likes Items 1,2,3,4, and 5,
And User B likes Items 1,2,3, and 4
Then User B is quite likely to also like Item 5

Item-based recommendations:
If Users who purchase item 1 are also disproportionately likely to purchase item 2
And User A purchased item 1
Then User A will probably be interested in item 2

Longest repeated substring


 symmetric trees
 copy a linkedlist

  – 1. Find longest Palindrome in give string



design rubik's cube
class Square
    + name : string
    + accronym : string

class Row
    + left_square : square
    + center_square : square
    + right_square : square

class Face
    + top_row : list of 3 square
    + center_row : list of 3 square
    + bottom_row : list of 3 square

    + rotate(counter_clockwise : boolean) : nothing

class Cube
    + back_face : face
    + left_face : face
    + top_face : face
    + right_face : face
    + front_face : face
    + bottom_face : face

    - rotate_face(cube_fac

***
 string中longest parlindrome, 我给出了先reverse然后求longest 
common string的方法



**when to use staic:
ask yourself "does it make sense to call this method, even if no Obj has been constructed yet?" If so, it should definitely be static.


OO Design：设计一个动物园（主要是animal的继承机制)-----animal abstract class
---inheritence, Zoo singleton,cage capacity occupancy 
**********
public class Zoo{
    private variables
    private static final Singleton instance= new Singleton()
    private Zoo(){
    //constructor

    }
    public staic getinstance(){
    if instance ==Null{
    this. instance= new zoo()

    }
    return this.zoo;
    }
}
**********


restuarant reservation system{
    1. num of party and num of table
    2. avliable seats and time 
    3. waitlist
    4. table class
    5. records class

}



还有常见的就是设计

word ladder --- trie +bfs

给一个很大的文件，里面包含很多单词。计算出现频率最高的k个单词。白板写代码
top K algorithm ----top K algo



roman to int----greedy



找两个string存不存在相同元素 ----hash.



Implement Huffman code


LinkedList如何去duplicate ----

LCA----

一个string，找到所有character出现的频率，并按频率大
小顺序输出。 ---hashtable



hashtable collision ------ 1. a linkedlist with same hash nums, then use .equals to determine output
2. if full, resize the hash table then mod the size of the table 

cellphone keyboard --permutation
